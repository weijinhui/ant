<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <mvc:resources mapping="/staticResources/**" location="/staticResources/">

    </mvc:resources>

    <context:component-scan base-package="com.ant.*" >
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository" />
    </context:component-scan>

    <mvc:annotation-driven conversion-service="conversionService"/>

    <!-- 转换日期 -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <ref bean="DateConverter"/>
            </set>
        </property>
    </bean>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

    <bean id="freemarkerConfiguration" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="location" value="classpath:freemarker.properties" />
    </bean>

    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="freemarkerSettings" ref="freemarkerConfiguration"/>
        <property name="templateLoaderPath" value="/WEB-INF/pages/" />
            <property name="freemarkerVariables">
            <map>
                <entry key="xml_escape" value-ref="fmXmlEscape" />
            </map>
        </property>
    </bean>
    <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>
    <bean id="freemakerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
    <property name="suffix" value=".html" />
    <property name="contentType" value="text/html; charset=UTF-8" />
    <property name="exposeRequestAttributes" value="true" />
    <property name="exposeSessionAttributes" value="true" />
    <property name="exposeSpringMacroHelpers" value="true" />
    <property name="requestContextAttribute" value="request" />
    <property name="order" value="0" />
</bean>
    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 通用解析器 -->
   <!-- <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="" />
        <property name="viewNames" value="*.html,*.jsp" />
        <property name="suffix" value="" />
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.InternalResourceView" />
        <property name="order" value="1"></property>
    </bean>-->


    <!--<mvc:interceptors>-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/"/>-->
            <!--<mvc:mapping path="/**"/>-->
            <!--<mvc:exclude-mapping path="/wechat/**" />&lt;!&ndash; 微信服务号内容 &ndash;&gt;-->
            <!--<mvc:exclude-mapping path="/system/login/**" />&lt;!&ndash; 登陆处理 &ndash;&gt;-->
            <!--<mvc:exclude-mapping path="/staticResources/**" />&lt;!&ndash; 静态资源 &ndash;&gt;-->
            <!--<mvc:exclude-mapping path="/api/**" />&lt;!&ndash; api接口 &ndash;&gt;-->
            <!--<mvc:exclude-mapping path="/MP_verify_Szc4wEHzWtg66p9Z.txt"/>&lt;!&ndash; 微信特殊认证(测试号) &ndash;&gt;-->
            <!--<mvc:exclude-mapping path="/MP_verify_2rRLWEJLgkJHI8mT.txt"/>&lt;!&ndash; 微信特殊认证(正式号) &ndash;&gt;-->
            <!--<bean class="com.appFoundation.system.interceptor.SystemInterceptor"></bean>-->
        <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->
   <!-- <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor" />
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager" />
    </bean>
-->

</beans>